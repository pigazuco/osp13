---
- name: PREPARE SERVER
  hosts: osp-director
  remote_user: root
  gather_facts: no
#  tasks:
#    - name: Disable NetworkManager
#      systemd:
#        name: NetworkManager
#        state: stopped
#        enabled: no
- name: DEPLOY-UNDERCLOUD
  hosts: osp-director
  remote_user: stack
  gather_facts: no
#  tasks:
#    - name: RPM packages for overcloud
#      command: "{{item}}"
#      with_items:
#        - curl -O http://registry.mad.lab/osp13/python2-tripleo-repos-0.0.1-0.20200310031818.5aa9c9a.el7.noarch.rpm
#        - sudo yum localinstall python2-tripleo-repos-0.0.1-0.20200310031818.5aa9c9a.el7.noarch.rpm  -y
#        - sudo -E tripleo-repos -b queens current
#        - sudo yum install -y python-tripleoclient
#        - cp /usr/share/python-tripleoclient/undercloud.conf.sample ~/undercloud.conf
#    - name: Install overcloud
#      command: openstack undercloud install
#      register: salida
#    - debug: msg="{{ salida.stdout }}"
#    - name: Insert stackrc on bashrc
#      lineinfile:
#        path: ~/.bashrc
#        line: source stackrc
- name: DEPLOY-UNDERCLOUD
  hosts: osp-director
  remote_user: stack
  gather_facts: no
#  tasks:
#    - name: UpdateDNS
#      command: "{{item}}"
#      with_items:
#        - openstack subnet set --dns-nameserver 1.255.0.1  ctlplane-subnet
#    - name: Load Images
#      with_items:
#    - name: Load Images
#        - curl -O http://registry.mad.lab/osp13/images/ironic-python-agent.initramfs
#        - curl -O http://registry.mad.lab/osp13/images/ironic-python-agent.kernel
#        - curl -O http://registry.mad.lab/osp13/images/overcloud-full.initrd
#        - curl -O http://registry.mad.lab/osp13/images/overcloud-full.qcow2
#        - curl -O http://registry.mad.lab/osp13/images/overcloud-full.vmlinuz
#        - curl -O http://registry.mad.lab/osp13/images/undercloud.qcow2
#        - openstack overcloud image upload
#        - rm -rf ironic-python-agent.initramfs
#        - rm -rf ironic-python-agent.kernel
#        - rm -rf overcloud-full.initrd
#        - rm -rf overcloud-full.qcow2
#        - rm -rf overcloud-full.vmlinuz
#        - rm -rf undercloud.qcow2
########IRONIC
- name: IRONIC
  hosts: osp-director
  remote_user: stack
  gather_facts: no
#  tasks:
#    - name: Get ramdisk id
#      shell:
#        cmd: openstack image list | grep bm-deploy-ramdisk | awk '{print $2}'
#      register: ramdisk
#    - name: Get kernel id
#      shell:
#        cmd: openstack image list | grep bm-deploy-kernel | awk '{print $2}'
#      register: kernel
#    - name: Add node1
#      shell:
#        cmd: openstack baremetal node create --driver ipmi --name node1 --os-baremetal-api-version 1.31
#            --deploy-interface direct
#            --driver-info ipmi_username=admin
#            --driver-info ipmi_password=openstack
#            --driver-info ipmi_address=srv1.mad.lab
#            --driver-info ipmi_port=7011
#            --driver-info deploy_ramdisk={{ ramdisk.stdout }}
#            --driver-info deploy_kernel={{ kernel.stdout }}
#    - name: Add node2
#      shell:
#        cmd: openstack baremetal node create --driver ipmi --name node2 --os-baremetal-api-version 1.31
#            --deploy-interface direct
#            --driver-info ipmi_username=admin
#            --driver-info ipmi_password=openstack
#            --driver-info ipmi_address=srv1.mad.lab
#            --driver-info ipmi_port=7012
#            --driver-info deploy_ramdisk={{ ramdisk.stdout }}
#            --driver-info deploy_kernel={{ kernel.stdout }}
#    - name: Add node3
#      shell:
#        cmd: openstack baremetal node create --driver ipmi --name node3 --os-baremetal-api-version 1.31
#            --deploy-interface direct
#            --driver-info ipmi_username=admin
#            --driver-info ipmi_password=openstack
#            --driver-info ipmi_address=srv1.mad.lab
#            --driver-info ipmi_port=7013
#            --driver-info deploy_ramdisk={{ ramdisk.stdout }}
#            --driver-info deploy_kernel={{ kernel.stdout }}
#    - name: Get node-id 1
#      shell:
#        cmd: openstack baremetal node list | grep node1 | awk '{print $2}'
#      register: node_id1
#    - name: Get node-id 2
#      shell:
#        cmd: openstack baremetal node list | grep node2 | awk '{print $2}'
#      register: node_id2
#    - name: Get node-id 3
#      shell:
#        cmd: openstack baremetal node list | grep node3 | awk '{print $2}'
#      register: node_id3
#    - name: Assign port-mac to node1
#      shell:
#        cmd: openstack baremetal port create 52:54:00:09:9b:a9 --node {{ node_id1.stdout }}
#    - name: Assign port-mac to node2
#      shell:
#        cmd: openstack baremetal port create 52:54:00:3c:42:a8 --node {{ node_id2.stdout }}
#    - name: Assign port-mac to node3
#      shell:
#        cmd: openstack baremetal port create 52:54:00:e3:1f:c7 --node {{ node_id3.stdout }}
#    - name: Manage all nodes
#      shell:
#        cmd: openstack baremetal node manage node1 && openstack baremetal node manage node2 && openstack baremetal node manage node3
#    - name: Introspect all nodes
#      shell:
#        cmd: openstack overcloud node introspect --provide --all-manageable
#    - name: Set control profile
#      shell:
#        cmd: openstack baremetal node set --property capabilities='profile:control,boot_option:local' node1
#    - name: Set compute profile
#      shell:
#        cmd: openstack baremetal node set --property capabilities='profile:compute,boot_option:local' node2
#    - name: Set compute profile
#      shell:
#        cmd: openstack baremetal node set --property capabilities='profile:compute,boot_option:local' node3
#    - name: Set flavor for control
#      shell:
#        cmd: openstack flavor set --property ram=12288 control
######
- name: PREPARE DIRECTORY
  hosts: osp-director
  remote_user: stack
  gather_facts: no
  tasks:
    - name: Copy deploy_project.yml
      copy:
        src: deploy_project.yml
        dest: ~/deploy_project.yml
        mode: '0774'
    - name: Copy patch
      copy:
        src: patch.diff
        dest: ~/patch.diff
    - name: Download tripleo-ciscoaci-13.0-749.noarch.rpm
      get_url:
        url: http://registry.mad.lab/osp13/tripleo-ciscoaci-13.0-749.noarch.rpm
        dest: ~/tripleo-ciscoaci-13.0-749.noarch.rpm
    - name: Download deploy.tar
      get_url:
        url: http://registry.mad.lab/osp13/deploy.tar
        dest: ~/deploy.tar
    - name: Uncompress templates
      command: tar -xf deploy.tar
    - name: Patch keystone.yaml
      command: sudo yum localinstall tripleo-ciscoaci-13.0-749.noarch.rpm -y
    - name: copy cisco-aci-tripleo-heat-templates
      command: cp -r /opt/ciscoaci-tripleo-heat-templates .
- name: PREPARE DOCKER
  hosts: osp-director
  remote_user: root
  gather_facts: no
  tasks:
    - name: Update docker service
      shell:
          cmd: echo '[Service]
          ExecStart=
          ExecStart=/usr/bin/dockerd' > /etc/systemd/system/docker.service.d/docker.conf
    - name: Update docker service cont.
      command: "{{item}}"
      with_items:
        - echo '{ "debug":true, "insecure-registries":["registry.mad.lab:5000","192.168.24.1:8787"] }' > /etc/docker/daemon.json
        - ln -s /usr/libexec/docker/docker-runc-current /usr/libexec/docker/docker-runc
        - sleep 3s
        - systemctl daemon-reload
      - sleep 3s
      - service docker restart
- name: Deploy cisco containers
  hosts: osp-director
  remote_user: stack
  gather_facts: no
  tasks:
    - name: Create containers
      shell:
         cmd: /opt/ciscoaci-tripleo-heat-templates/tools/build_openstack_aci_containers.py --upstream=registry.mad.lab:5000 --destregistry=192.168.24.1:8787รง
         cmd: openstack role add --user admin --project service ResellerAdmin
         cmd: openstack --os-project-name service object store account set --property Temp-URL-Key=$(uuidgen | sha1sum | awk '{print $1}')
